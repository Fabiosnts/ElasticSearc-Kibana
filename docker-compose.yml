version: '3'
services:

services:
 
  elasticsearch:
    container_name: ElasticSearch    
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment: 
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      # - http.host=0.0.0.0
      # - transport.host=127.0.0.1
      # - network.host=0.0.0.0
      # - cluster.name="elastic_stack_logging"
      # - node.name="elastic_stack_logging_data"
      # - discovery.zen.minimum_master_nodes=1
      # - http.cors.enabled=true
      # - http.cors.allow-origin="*"
    volumes: 
      - elasticsearch_data:/usr/share/elasticsearch/data      
    ports:
      - "9200:9200"
    # - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://elasticsearch:9200 || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5  
    networks:
      - log   

  ##########################################################
  kibana:
    container_name: Kibana    
    image: docker.elastic.co/kibana/kibana:7.10.2
    environment:
      - server.name=kibana
      - server.host="0"
      - elasticsearch.url=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://localhost:5601/ || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5
    networks:
      - log    
    
  elastichq:
    container_name: elastichq
    image: elastichq/elasticsearch-hq
    depends_on:
      - elasticsearch
    environment:
      - "HQ_DEFAULT_URL=http://elasticsearch:9200"
    ports:
      - "5000:5000"
    restart: on-failure
    networks:
      - log

volumes:
  mq_data:
  elasticsearch_data:

networks:
  log:
    driver: bridge



